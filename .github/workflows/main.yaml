on:
  push:
    branches: [master]
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} nix develop --command go build -o envar-${{ matrix.goarch }}-${{ matrix.goos }}${{ matrix.goos == 'windows' && '.exe' || '' }} .
      - uses: actions/upload-artifact@v5
        with:
          name: envar-${{ matrix.goarch }}-${{ matrix.goos }}
          path: ./envar-*
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix develop --command go test
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix develop --command treefmt --ci
  spell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - run: nix develop --command cspell .
